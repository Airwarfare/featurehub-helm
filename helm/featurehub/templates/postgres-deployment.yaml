{{- if .Values.postgres.enabled -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: edge-config
data:
  initdb.sql: |-
    CREATE USER featurehub PASSWORD 'featurehub';
    CREATE DATABASE featurehub;
    GRANT ALL PRIVILEGES ON DATABASE featurehub TO featurehub;
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-db-vol
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 128Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app.kubernetes.io/version: 4.2.2
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres
      app.kubernetes.io/instance: {{ .Release.Name }}
  # allow the postgres server to be completely unavailable
  strategy:
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgres
    spec:
      serviceAccountName: {{ include "featurehub.serviceAccountName" . }}
      securityContext:
      {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: postgres
          securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
          image: "postgres:12-alpine"
          imagePullPolicy: {{ .Values.pullPolicy }}
          env:
            - name: POSTGRES_PASSWORD
              value: mypassword
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d
              name: postgres-init
            - mountPath: /var/lib/postgresql
              name: postgres-db
          resources:
      {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: postgres-init
          configMap:
            name: postgres-config
        - name: postgres-db
          persistentVolumeClaim:
            claimName: postgres-db-vol
      {{- with .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
  {{- toYaml . | nindent 8 }}
  {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app.kubernetes.io/name: postgres
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: postgres
      protocol: TCP
      name: postgres
  selector:
    app.kubernetes.io/name: postgres
  {{- end }}